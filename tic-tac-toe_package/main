import pygame
import sys

# Инициализация Pygame
pygame.init()

# Константы
WIDTH, HEIGHT = 600, 600
LINE_WIDTH = 15
BOARD_ROWS, BOARD_COLS = 3, 3
SQUARE_SIZE = WIDTH // BOARD_COLS

# Цвета
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
RED = (255, 0, 0)
GREEN = (0, 255, 0)
BLUE = (0, 0, 255)

# Инициализация экрана
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Крестики-Нолики-Треугольники")
# Шрифт
font = pygame.font.Font(None, 74)
small_font = pygame.font.Font(None, 36)
# Игровая доска
board = [["" for _ in range(BOARD_COLS)] for _ in range(BOARD_ROWS)]
current_player = "X"
game_over = False
scores = {"X": 0, "O": 0, "T": 0}

def draw_board():
    screen.fill(WHITE)
    for row in range(1, BOARD_ROWS):
        pygame.draw.line(screen, BLACK, (0, row * SQUARE_SIZE), (WIDTH, row * SQUARE_SIZE), LINE_WIDTH)
    for col in range(1, BOARD_COLS):
        pygame.draw.line(screen, BLACK, (col * SQUARE_SIZE, 0), (col * SQUARE_SIZE, HEIGHT), LINE_WIDTH)

def draw_markers():
    for row in range(BOARD_ROWS):
        for col in range(BOARD_COLS):
            if board[row][col] == "X":
                color = RED
                pygame.draw.line(screen, color, (col * SQUARE_SIZE + 50, row * SQUARE_SIZE + 50),
                                 (col * SQUARE_SIZE + SQUARE_SIZE - 50, row * SQUARE_SIZE + SQUARE_SIZE - 50), LINE_WIDTH)
                pygame.draw.line(screen, color, (col * SQUARE_SIZE + SQUARE_SIZE - 50, row * SQUARE_SIZE + 50),
                                 (col * SQUARE_SIZE + 50, row * SQUARE_SIZE + SQUARE_SIZE - 50), LINE_WIDTH)
            elif board[row][col] == "O":
                color = GREEN
                pygame.draw.circle(screen, color, (col * SQUARE_SIZE + SQUARE_SIZE // 2, row * SQUARE_SIZE + SQUARE_SIZE // 2), SQUARE_SIZE // 2 - 50, LINE_WIDTH)
            elif board[row][col] == "T":
                color = BLUE
                pygame.draw.polygon(screen, color,
                                    [(col * SQUARE_SIZE + SQUARE_SIZE // 2, row * SQUARE_SIZE + 50),
                                     (col * SQUARE_SIZE + 50, row * SQUARE_SIZE + SQUARE_SIZE - 50),
                                     (col * SQUARE_SIZE + SQUARE_SIZE - 50, row * SQUARE_SIZE + SQUARE_SIZE - 50)])

def check_winner():
    global game_over
    for row in range(BOARD_ROWS):
        if board[row][0] == board[row][1] == board[row][2] != "":
            game_over = True
            return board[row][0]
    for col in range(BOARD_COLS):
        if board[0][col] == board[1][col] == board[2][col] != "":
            game_over = True
            return board[0][col]
    if board[0][0] == board[1][1] == board[2][2] != "":
        game_over = True
        return board[0][0]
    if board[0][2] == board[1][1] == board[2][0] != "":
        game_over = True
        return board[0][2]
    if all(board[row][col] != "" for row in range(BOARD_ROWS) for col in range(BOARD_COLS)):
        game_over = True
        return "Draw"
    return None

def reset_game():
    global board, current_player, game_over
    board = [["" for _ in range(BOARD_COLS)] for _ in range(BOARD_ROWS)]
    current_player = "X"
    game_over = False

def draw_scores():
    score_text = small_font.render(f"X: {scores['X']} O: {scores['O']} T: {scores['T']}", True, BLACK)
    screen.blit(score_text, (10, HEIGHT - 40))

def display_winner(winner):
    text = font.render(f"{winner} победил!" if winner != "Draw" else "Ничья!", True, BLACK)
    screen.blit(text, (WIDTH // 4, HEIGHT // 2))

# Главный цикл игры
while True:
    draw_board()
    draw_markers()
    draw_scores()

    if game_over:
        winner = check_winner()
        if winner is not None:
            if winner != "Draw":
                scores[winner] += 1
            display_winner(winner)
            pygame.display.update()
            pygame.time.delay(2000)
            reset_game()

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
            sys.exit()
        if event.type == pygame.MOUSEBUTTONDOWN and not game_over:
mouseX  = event.pos[0]
    mouseY = event.pos[1]

clicked_row = mouseY // SQUARE_SIZE
clicked_col = mouseX // SQUARE_SIZE

if board[clicked_row][clicked_col] == "":
                board[clicked_row][clicked_col] = current_player
                current_player = "O" if current_player == "X" else "T" if current_player == "O" else "X"

                check_winner()